// Generated by code
// DO NOT EDIT!!
using System.Collections.Generic;

namespace Schema
{
	public partial class Schema_Animation:ISchema
	{
		private Dictionary<uint, Schema_AnimationDefine> Data = new Dictionary<uint, Schema_AnimationDefine>();

		public bool Contains(uint key)
        {
			return Data.ContainsKey(key);
        }

        public Schema_AnimationDefine Get(uint key)
        {
			if(!Data.TryGetValue(key, out var schema))
            {
				LOG.ERROR($"读不到配置!配置名：Schema_Animation ，KEY: {key}");
            }
			return schema;
		}

		public Dictionary<uint, Schema_AnimationDefine>.KeyCollection GetKeys()
        {
            return Data.Keys;
        }

		public Dictionary<uint, Schema_AnimationDefine>.ValueCollection GetValues()
        {
            return Data.Values;
        }

        public Dictionary<uint, Schema_AnimationDefine>.Enumerator GetEnumerator()
        {
            return Data.GetEnumerator();
        }
	
		#region Deserialize code
		public void Deserialize(Config.DataReader reader )
		{
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
				Schema_AnimationDefine content = reader.ReadStruct<Schema_AnimationDefine>(DataDefineDeserializeHandler);
				Data.Add(content.KEY, content);
            } 
		}


		static Config.DeserializeHandler<Schema_AnimationDefine> _DataDefineDeserializeHandler;
		static Config.DeserializeHandler<Schema_AnimationDefine> DataDefineDeserializeHandler
		{
			get
			{
				if (_DataDefineDeserializeHandler == null )
				{
					_DataDefineDeserializeHandler = new Config.DeserializeHandler<Schema_AnimationDefine>(Deserialize);
				}

				return _DataDefineDeserializeHandler;
			}
		}
		public static void Deserialize( Schema_AnimationDefine ins, Config.DataReader reader )
		{
            ins.KEY = reader.ReadUInt32();

			ins.Name = reader.ReadString();

			ins.LoopCountMin = reader.ReadInt32();

			ins.LoopCountMax = reader.ReadInt32();

			
    	}
		#endregion
		#region Clear Code
		public void Clear( )
		{			
			Data.Clear();
		}
		#endregion
		public void Release()
		{
			
		}
	} 

	[System.Serializable]
	public partial class Schema_AnimationDefine
	{
		public uint KEY = 0;
		public string Name = "";//*
		public int LoopCountMin = 0;
		public int LoopCountMax = 0;
		
	} 
}
